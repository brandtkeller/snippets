# Default values for gitea.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

clusterDomain: cluster.local

image:
  repository: gitea/gitea
  tag: 1.13.2
  pullPolicy: Always

imagePullSecrets: []

service:
  http:
    type: ClusterIP
    port: 3000
    clusterIP: None
    #loadBalancerIP:
    #nodePort:
    annotations:
  ssh:
    type: ClusterIP
    port: 22
    clusterIP: None
    #loadBalancerIP:
    #nodePort:
    #externalTrafficPolicy:
    #externalIPs:
    loadBalancerSourceRanges: []
    annotations:

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: cluster-ca-issuer
  hosts:
    - git.rke2.home.local
  tls:
  - secretName: git-cicd-tls
    hosts:
      - git.rke2.home.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

statefulset:
  env: []
    # - name: VARIABLE
    #   value: my-value
  terminationGracePeriodSeconds: 60

persistence:
  enabled: true
  # existingClaim:
  size: 10Gi
  accessModes:
    - ReadWriteOnce
  labels: {}
  annotations: {}

# additional volumes to add to the Gitea statefulset.
extraVolumes:
- name: root-ca
  secret:
    secretName: root-ca-cert
- name: entry
  configMap:
    name: git-entry
    defaultMode: 0777


# additional volumes to mount, both to the init container and to the main
# container. As an example, can be used to mount a client cert when connecting
# to an external Postgres server.
extraVolumeMounts:
- name: root-ca
  readOnly: false
  mountPath: "/usr/local/share/ca-certificates"
- name: entry
  mountPath: /usr/bin/entrypoint
  subPath: entrypoint
  

# bash shell script copied verbatim to the start of the init-container.
initPreScript: ""
#
# initPreScript: |
#   mkdir -p /data/git/.postgresql
#   cp /pg-ssl/* /data/git/.postgresql/
#   chown -R git:git /data/git/.postgresql/
#   chmod 400 /data/git/.postgresql/postgresql.key


gitea:
  admin:
    username: gitea_admin
    password: REDACTED
    email: "gitea@home.local"

  metrics:
    enabled: false
    serviceMonitor:
      enabled: false

  ldap:
    # There is a bug with the admin filter parsing failing
    enabled: true
    name: 'GiteaLdap'
    security-protocol: LDAPS
    host: "freeipa.home.local"
    port: "636"
    bind-dn: uid=home_svc,cn=users,cn=accounts,dc=home,dc=local
    bind-password: REDACTED
    user-search-base: cn=accounts,dc=home,dc=local
    user-filter: (&(objectClass=inetOrgPerson)(uid=%s))
    admin-filter: (memberOf=cn=admins,cn=groups,cn=accounts,dc=home,dc=local)
    username-attribute: uid
    firstname-attribute: givenName
    surname-attribute: sn
    email-attribute: mail
      


  config:
    ALLOW_LOCALNETWORKS: true
    ENABLE_PUSH_CREATE_ORG: true
    APP_NAME: "Gitea: Keller Home Development Git"
    server:
      ROOT_URL: https://git.rke2.home.local

  podAnnotations: {}

  database:
    builtIn:
      postgresql:
        enabled: true
      mysql:
        enabled: false
      mariadb:
        enabled: false

  cache:
    builtIn:
      enabled: true

memcached:
  service:
    port: 11211

postgresql:
  global:
    postgresql:
      postgresqlDatabase: gitea
      postgresqlUsername: gitea
      postgresqlPassword: gitea
      servicePort: 5432
  persistence:
    size: 10Gi

mysql:
  root:
    password: gitea
  db:
    user: gitea
    password: gitea
    name: gitea
  service:
    port: 3306
  persistence:
    size: 10Gi

mariadb:
  auth:
    database: gitea
    username: gitea
    password: gitea
    rootPassword: gitea
  primary:
    service:
      port: 3306
    persistence:
      size: 10Gi
